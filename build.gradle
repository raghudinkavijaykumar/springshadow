import com.github.jengelman.gradle.plugins.shadow.transformers.*

plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.github.johnrengelman.shadow' version '6.1.0'
	id 'java'
}

group = 'com.example.springshadow'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'


configurations {
	all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'org.apache.hive', module: 'hive-exec'
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
/* Parallel data processing */

    // Comment these beam libraries to not see the error in shadow jar But i need this
	implementation 'org.apache.beam:beam-sdks-java-core:2.27.0' 
	implementation 'org.apache.beam:beam-runners-direct-java:2.27.0'
	implementation 'org.apache.beam:beam-runners-google-cloud-dataflow-java:2.27.0'

	 implementation 'org.apache.beam:beam-vendor-guava-20_0:0.1'
	 implementation 'org.apache.beam:beam-vendor-grpc-1_13_1:0.2'
	 implementation 'org.apache.beam:beam-vendor-guava-26_0-jre:0.1'
	
	
	implementation 'org.springframework.boot:spring-boot-starter'
   // implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

	
	// implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.1'
	implementation ('org.apache.hive:hive-exec:1.2.2') {
		exclude group: 'com.google.guava' 
	}
}

jar {
    manifest {
        attributes "Main-Class": "com.example.springshadow.SpringshadowApplication"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    zip64 = true
    exclude "**/Log4j2Plugins.dat"
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories' ]
        mergeStrategy = "append"
    }
}

test {
	useJUnitPlatform()
}
